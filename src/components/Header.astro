---
import { GLOBAL } from "../lib/variables";
import Anchor from "./common/Anchor.astro";
import ThemeToggle from "./ThemeToggle.astro";

const currUrl = Astro.url.pathname;
---

<header class="zag-bg zag-border-b zag-transition sticky top-0 w-full z-10">
  <div
    class="zag-bg zag-transition sm:hidden relative z-50 py-4 flex items-center"
  >
    <button class="px-4" aria-label="Toggle navigation menu">
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="32"
        height="32"
        viewBox="0 0 512 512"
        class="zag-fill zag-transition"
      >
        <path d="M80 96h352v32H80zm0 144h352v32H80zm0 144h352v32H80z"></path>
      </svg>
    </button>
  </div>
  <nav
    class="zag-bg zag-border-b zag-transition fixed sm:relative inset-x-0 top-0 h-auto sm:px-4 flex justify-between flex-col gap-8 py-4 text-xl sm:flex-row max-w-2xl mx-auto sm:pt-4 sm:border-none"
  >
    <div
      class="flex flex-col font-mono font-medium gap-4 sm:flex-row px-4 sm:px-0 mt-16 sm:mt-0"
    >
      {
        Object.entries(GLOBAL.menu).map((i) => (
          <Anchor url={i[1]} class={currUrl === (i[1]) ? "dark:decoration-zag-accent-dark decoration-zag-accent-light" : ""}>{i[0]}</Anchor>
        ))
      }
    </div>
    <div class="flex gap-4 justify-between px-4 sm:px-0">
      {
        GLOBAL.githubProfile && (
          <Anchor url={GLOBAL.gmailLink} aria-label="Gmail Link">
            <svg
              xmlns="http://www.w3.org/2000/svg"
              width="24"
              height="24"
              viewBox="0 0 24 24"
              fill="none"
              stroke="currentColor"
              stroke-width="2"
              stroke-linecap="round"
              stroke-linejoin="round"
            >
              <>
                <path d="M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z" />
                <polyline points="22,6 12,13 2,6" />
              </>
            </svg>
          </Anchor>
        )
      }
      <ThemeToggle />
    </div>
  </nav>
</header>

<script>
  const button = document.querySelector("button");
  const nav = document.querySelector("nav");
  let isOpen = false;

  function updateNavState() {
    const isMobile = window.matchMedia("(max-width: 640px)").matches;
    if (isMobile) {
      nav!.style.transform = isOpen ? "translateY(0)" : "translateY(-100%)";
    } else {
      nav!.style.transform = "translateY(0)";
      isOpen = false;
    }
  }

  function toggleNav() {
    isOpen = !isOpen;
    updateNavState();
  }

  button?.addEventListener("click", toggleNav);
  window.addEventListener("resize", updateNavState);

  updateNavState();
</script>
